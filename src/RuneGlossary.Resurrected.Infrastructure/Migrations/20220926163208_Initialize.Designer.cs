// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RuneGlossary.Resurrected.Infrastructure;

#nullable disable

namespace RuneGlossary.Resurrected.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220926163208_Initialize")]
    partial class Initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RuneGlossary.Resurrected.Infrastructure.Entities.ClassEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("classes", "resurrected");
                });

            modelBuilder.Entity("RuneGlossary.Resurrected.Infrastructure.Entities.ItemTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("class");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("item_types", "resurrected");
                });

            modelBuilder.Entity("RuneGlossary.Resurrected.Infrastructure.Entities.RuneEntity", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasColumnName("id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("InHelmet")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("in_helmet");

                b.Property<string>("InBodyArmor")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("in_body_armor");

                b.Property<string>("InShield")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("in_shield");

                b.Property<string>("InWeapon")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("in_weapon");

                b.Property<int?>("Level")
                    .HasColumnType("integer")
                    .HasColumnName("level");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("name");

                b.HasKey("Id");

                b.ToTable("runes", schema: "resurrected");
            });
#pragma warning restore 612, 618
        }
    }
}
